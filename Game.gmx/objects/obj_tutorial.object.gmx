<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_arrow</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///setup tutorial world
obj_control.game_state = FREEZE;
tutorial_part = 0;
dialog = noone;
dialog_num = 0;
x = obj_player.x;
y = obj_player.y - 16;
image_speed = 0.15;
dialog[0] = "This is your character";
dialog[1] = "Use 'WASD' to move";
dialog[2] = "For controllers, use the left analog stick";
quest_dialog = "Move around the world";
countdown = false;
freeze_part = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Used to give some extra time
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//show_debug_message(string(tutorial_part))

//after dialog ends resume game
if(dialog_num&gt;=array_length_1d(dialog) and !freeze_part){
    obj_control.game_state = PLAY;
    freeze_part = true;
}
//go to next dialog
if(obj_input.continue_key){
        dialog_num++;
    }

if(tutorial_part == 0){
    if(dialog_num&lt;array_length_1d(dialog)) obj_control.game_state = FREEZE;
    
    if(!countdown and (round(x) != round(obj_player.x) or round(y) != round(obj_player.y-16))){
        alarm[0] = 2*room_speed;
        countdown = true;
    }
    if(alarm[0] &lt;= 0 and countdown and obj_control.game_state == PLAY){
        countdown = false;
        tutorial_part = 1;
        dialog_num = 0;
        dialog = noone;
        dialog[0] = "This is a Pressure Plate"
        dialog[1] = "If you stand on it the gate lowers"
        obj_control.game_state = FREEZE;
        x = obj_pressure_plate.x;
        y = obj_pressure_plate.y-16;
        freeze_part = false;
        quest_dialog = "Stand on the pressure plate";
    }

} else if(tutorial_part == 1){
    if(round(obj_pressure_plate.x) == round(obj_player.x) and round(obj_pressure_plate.y) == round(obj_player.y) and obj_control.game_state == PLAY){
        tutorial_part = 2;
        dialog_num = 0;
        dialog = noone;
        dialog[0] = "You can also activate a Pressure Plate by moving wooden boxes over it"
        obj_control.game_state = FREEZE;
        x = obj_moveable_wall.x;
        y = obj_moveable_wall.y-16;
        freeze_part = false;
        quest_dialog = "Move a box over the pressure plate";
    }
    
} else if(tutorial_part == 2){
    if(round(obj_pressure_plate.x) == round(obj_moveable_wall.x) and round(obj_pressure_plate.y) == round(obj_moveable_wall.y) and obj_control.game_state == PLAY){
        tutorial_part = 3;
        dialog_num = 0;
        dialog = noone;
        dialog[0] = "This is a lever"
        dialog[1] = "If you walk against the lever it will turn on/off"
        dialog[2] = "Levers can be used to open or close gates"
        obj_control.game_state = FREEZE;
        x = obj_lever.x;
        y = obj_lever.y-16;
        freeze_part = false;
        quest_dialog = "Use the lever";
    }
} else if(tutorial_part == 3){
    if(!countdown and obj_lever.image_index != 0){
        alarm[0] = 10;
        countdown = true;
    }
    if(alarm[0] &lt;= 0 and countdown and obj_control.game_state == PLAY){
        countdown = false;
        tutorial_part = 4;
        dialog_num = 0;
        dialog = noone;
        dialog[0] = "This is a Key."
        dialog[1] = "Some Doors require Key(s) to open"
        dialog[2] = "Having enough keys will allow you to progress"
        dialog[3] = "Go through the Door to continue to the next area"
        obj_control.game_state = FREEZE;
        x = obj_key.x;
        y = obj_key.y-16;
        freeze_part = false;
        quest_dialog = "Collect the key and go through the door";
    }

} else if(tutorial_part == 4){
    if(obj_player_stats.keys&gt;0){
        x = obj_door.x;
        y = obj_door.y-16;
        tutorial_part = 5;
    }
}  else if(tutorial_part == 5){
    //this is the end of tutorial room 1
}  else if(tutorial_part == 6){
    //this is the start of tutorial room 2
    if(obj_player_stats.inventory[0].sprite_index!=spr_empty){
        tutorial_part = 7;
        dialog_num = 0;
        dialog = noone;
        dialog[0] = "This is a item";
        dialog[1] = "You can view the stats of your weapons/items in the pause menu";
        x = obj_shield_artifact.x;
        y = obj_shield_artifact.y-16;
        obj_control.game_state = FREEZE;
        freeze_part = false;
        quest_dialog = "Pickup the item and see the stats of the weapons/items you picked up";
    }
}  else if(tutorial_part == 7){
    if(obj_player_stats.inventory[1].sprite_index!=spr_empty){
        tutorial_part = 8;
    }
}  else if(tutorial_part == 8){
    with(obj_gui_parent){
        if(type == "spr_bottom_ui" and lines != noone){
            other.dialog = noone;
        }
    }
    if(dialog = noone and obj_control.game_state == PLAY){
        tutorial_part = 9;
        dialog_num = 0;
        dialog = noone;
        dialog[0] = "This is an enemy";
        dialog[1] = "To use your weapon press the spacebar";
        dialog[2] = "For controllers, use the B button";
        x = obj_slime.x;
        y = obj_slime.y-16;
        freeze_part = false;
        obj_control.game_state = FREEZE;
        quest_dialog = "Kill the enemy";
        obj_player.can_fight = true;
    }
} else if(tutorial_part == 9){
    if(!instance_exists(obj_slime)){
        tutorial_part = 10;
        dialog_num = 0;
        dialog = noone;
        dialog[0] = "Congratulations you have finished the tutorial!";
        x = obj_door.x;
        y = obj_door.y-16;
        freeze_part = false;
        obj_control.game_state = FREEZE;
        quest_dialog = "Go through the door to continue with your journey";
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var scale = display_get_gui_width()/view_wview[0];
if(dialog_num&lt;array_length_1d(dialog)) {
    draw_set_colour(c_black);
    var xx = display_get_gui_width()/2-(sprite_get_width(spr_notifaction)/2)*scale
    var yy = 0
    draw_sprite_ext(spr_notifaction, 0, xx, yy, scale, scale, 0, -1, 1)
    draw_text_ext(xx+20, yy+20, dialog[dialog_num], 14, (sprite_get_width(spr_notifaction))*scale-30);
} else {
    draw_set_colour(c_black);
    var xx = display_get_gui_width()-sprite_get_width(spr_notifaction)*scale
    var yy = display_get_gui_height()-sprite_get_height(spr_notifaction)*scale
    draw_sprite_ext(spr_notifaction, 0, xx, yy, scale, scale, 0, -1, 1)
    draw_text_ext(xx+20, yy+20, quest_dialog, 14, (sprite_get_width(spr_notifaction))*scale-30);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!freeze_part) draw_self();
else if (tutorial_part != 0) draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
