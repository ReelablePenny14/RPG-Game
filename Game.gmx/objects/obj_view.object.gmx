<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Start View
x = 0;
y = 0;
spd = .15;
scene_spd = noone;
finish = noone;
target = -2;
xmove = 0;
ymove = 0;
hborder = view_hborder[0];
vborder = view_vborder[0];

if (instance_exists(obj_player)){
    x = obj_player_show.x;
    y = obj_player_show.y;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move view

// follow player
if (instance_exists(obj_player) and obj_control.game_state == PLAY){ // This may change depending on if we want to do it with obj_player_show or not
    x += (obj_player_show.x - x+1) * spd;
    y += (obj_player_show.y - y+1) * spd;
} else if (target != -2 and obj_control.game_state == PLAY){
    //assign first view target
    target = 0;
    finish[target, 0] = min(max(finish[target,0], view_wview[0]/2), room_width-view_wview[0]/2) 
    finish[target, 1] = min(max(finish[target,1], view_hview[0]/2), room_height-view_hview[0]/2)
    xmove = (finish[target, 0]-x) / (scene_sec[target]*room_speed);
    ymove = (finish[target, 1]-y) / (scene_sec[target]*room_speed);
    view_hborder[0] = view_wview[0]/2;
    view_vborder[0] = view_hview[0]/2;
    
    // freeze all objects in game
    obj_control.game_state = FREEZE;
    scr_pause_alarms();
} else if (target != -2 and obj_control.game_state == FREEZE){
    // follow cut scene
    if (abs(finish[target, 0]-x) &lt;= abs(xmove) and abs(finish[target, 1]-y) &lt;= abs(ymove)){
        if (target &lt; array_length_1d(finish)) {
            // assign a new view target
            x = finish[target, 0]
            y = finish[target, 1]
            target++
            finish[target, 0] = min(max(finish[target,0], view_wview[0]/2), room_width-view_wview[0]/2) 
            finish[target, 1] = min(max(finish[target,1], view_hview[0]/2), room_height-view_hview[0]/2)
            xmove = (finish[target, 0]-x) / (scene_sec[target]*room_speed);
            ymove = (finish[target, 1]-y) / (scene_sec[target]*room_speed);
        } else {
            // set view to follow player
            view_hborder[0] = hborder;
            view_vborder[0] = vborder;
            x = finish[target, 0]
            y = finish[target, 1]
            target = -2;
            
            // unfreeze all objects in game
            obj_control.game_state = PLAY;
            scr_unpause_alarms();
        }
    } else if (x != finish[target, 0] or y != finish[target, 1]){
        // Move view toward target location
        x += xmove;
        y += ymove;
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
